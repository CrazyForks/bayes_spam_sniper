<% content_for :title, "Trained messages" %>

<div class="w-full">
  <% if notice.present? %>
    <p class="py-2 px-3 bg-green-50 mb-5 text-green-500 font-medium rounded-md inline-block" id="notice"><%= notice %></p>
  <% end %>

  <!-- Header -->
  <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-6">
    <div>
      <h1 class="font-bold text-4xl mb-2">Trained Messages</h1>
      <p class="text-gray-600">Showing <%= @trained_messages.length %> of <%= @total_count %> messages</p>
    </div>
    <%= link_to "New trained message", new_trained_message_path, class: "mt-4 sm:mt-0 rounded-md px-3.5 py-2.5 bg-blue-600 hover:bg-blue-500 text-white block font-medium" %>
  </div>

  <!-- Filters -->
  <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-6">
    <%= form_with url: trained_messages_path, method: :get, local: true, class: "space-y-4" do |form| %>
      <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-5 gap-4">
        <!-- Search -->
        <div>
          <%= form.label :search, "Search Message", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= form.text_field :search, value: params[:search], placeholder: "Search in messages...", class: "w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" %>
        </div>

        <!-- Message Type Filter -->
        <div>
          <%= form.label :message_type, "Message Type", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= form.select :message_type, 
              options_for_select([['All Types', 'all']] + @message_types.map { |type| [type&.humanize || 'Unknown', type] }, params[:message_type]), 
              {}, 
              { class: "w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" } %>
        </div>

        <!-- Training Target Filter -->
        <div>
          <%= form.label :training_target, "Training Target", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= form.select :training_target, 
              options_for_select([['All Targets', 'all']] + @training_targets.map { |target| [target&.humanize || 'Unknown', target] }, params[:training_target]), 
              {}, 
              { class: "w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" } %>
        </div>

        <!-- Group Filter -->
        <div>
          <%= form.label :group_name, "Group", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= form.select :group_name, 
              options_for_select([['All Groups', 'all']] + @group_names.map { |name| [name, name] }, params[:group_name]), 
              {}, 
              { class: "w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500" } %>
        </div>

        <!-- Per Page -->
        <div>
          <%= form.label :per_page, "Per Page", class: "block text-sm font-medium text-gray-700 mb-1" %>
          <%= form.select :per_page, 
              options_for_select([[10, 10], [25, 25], [50, 50], [100, 100]], @per_page), 
              {}, 
              { class: "w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500", onchange: "this.form.submit();" } %>
        </div>
      </div>

      <!-- Hidden fields to preserve sorting -->
      <%= form.hidden_field :sort, value: params[:sort] %>
      <%= form.hidden_field :direction, value: params[:direction] %>

      <div class="flex space-x-2">
        <%= form.submit "Apply Filters", class: "rounded-md px-4 py-2 bg-blue-600 hover:bg-blue-500 text-white font-medium cursor-pointer" %>
        <%= link_to "Clear Filters", trained_messages_path, class: "rounded-md px-4 py-2 bg-gray-100 hover:bg-gray-50 text-gray-700 font-medium" %>
      </div>
    <% end %>
  </div>

  <!-- Table -->
  <div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <%= link_to trained_messages_path(params.permit!.merge(sort: 'id', direction: params[:sort] == 'id' && params[:direction] == 'asc' ? 'desc' : 'asc')), class: "hover:text-gray-700 flex items-center space-x-1" do %>
                <span>ID</span>
                <% if params[:sort] == 'id' %>
                  <span><%= params[:direction] == 'asc' ? '↑' : '↓' %></span>
                <% end %>
              <% end %>
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              Message
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <%= link_to trained_messages_path(params.permit!.merge(sort: 'training_target', direction: params[:sort] == 'training_target' && params[:direction] == 'asc' ? 'desc' : 'asc')), class: "hover:text-gray-700 flex items-center space-x-1" do %>
                <span>Target</span>
                <% if params[:sort] == 'training_target' %>
                  <span><%= params[:direction] == 'asc' ? '↑' : '↓' %></span>
                <% end %>
              <% end %>
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <%= link_to trained_messages_path(params.permit!.merge(sort: 'message_type', direction: params[:sort] == 'message_type' && params[:direction] == 'asc' ? 'desc' : 'asc')), class: "hover:text-gray-700 flex items-center space-x-1" do %>
                <span>Type</span>
                <% if params[:sort] == 'message_type' %>
                  <span><%= params[:direction] == 'asc' ? '↑' : '↓' %></span>
                <% end %>
              <% end %>
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <%= link_to trained_messages_path(params.permit!.merge(sort: 'sender_user_name', direction: params[:sort] == 'sender_user_name' && params[:direction] == 'asc' ? 'desc' : 'asc')), class: "hover:text-gray-700 flex items-center space-x-1" do %>
                <span>Sender</span>
                <% if params[:sort] == 'sender_user_name' %>
                  <span><%= params[:direction] == 'asc' ? '↑' : '↓' %></span>
                <% end %>
              <% end %>
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <%= link_to trained_messages_path(params.permit!.merge(sort: 'group_name', direction: params[:sort] == 'group_name' && params[:direction] == 'asc' ? 'desc' : 'asc')), class: "hover:text-gray-700 flex items-center space-x-1" do %>
                <span>Group</span>
                <% if params[:sort] == 'group_name' %>
                  <span><%= params[:direction] == 'asc' ? '↑' : '↓' %></span>
                <% end %>
              <% end %>
            </th>
            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
              <%= link_to trained_messages_path(params.permit!.merge(sort: 'created_at', direction: params[:sort] == 'created_at' && params[:direction] == 'asc' ? 'desc' : 'asc')), class: "hover:text-gray-700 flex items-center space-x-1" do %>
                <span>Created</span>
                <% if params[:sort] == 'created_at' %>
                  <span><%= params[:direction] == 'asc' ? '↑' : '↓' %></span>
                <% end %>
              <% end %>
            </th>
            <th scope="col" class="relative px-6 py-3">
              <span class="sr-only">Actions</span>
            </th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% if !@trained_messages.empty? %>
            <% @trained_messages.each do |trained_message| %>
              <tr class="hover:bg-gray-50">
                <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  <%= trained_message.id %>
                </td>
                <td class="px-6 py-4 text-sm text-gray-900">
                  <div class="max-w-xs truncate" title="<%= trained_message.message %>">
                    <%= truncate(trained_message.message, length: 50) %>
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <% if trained_message.training_target %>
                      <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ">
                      <%= trained_message.training_target.humanize %>
                    </span>
                  <% else %>
                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                      Unknown
                    </span>
                  <% end %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500
                           <%= trained_message.message_type == 'spam' ? 'bg-red-100 text-red-800' : trained_message.message_type == 'ham' ? 'bg-green-100 text-green-800' :  'bg-yellow-100 text-green-800'%>">
                  <%= trained_message.message_type&.humanize || 'Unknown' %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= trained_message.sender_user_name || 'Admin Imported' %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= trained_message.group_name || 'Imported' %>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= time_ago_in_words(trained_message.created_at) %> ago
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <div class="flex space-x-2">
                    <%= link_to "View", trained_message, class: "text-indigo-600 hover:text-indigo-900" %>
                    <%= link_to "Edit", edit_trained_message_path(trained_message), class: "text-indigo-600 hover:text-indigo-900" %>
                    <%= link_to "Delete", trained_message, method: :delete, 
                        class: "text-red-600 hover:text-red-900", 
                        data: { turbo_confirm: "Are you sure?" } %>
                  </div>
                </td>
              </tr>
            <% end %>
          <% else %>
            <tr>
              <td colspan="8" class="px-6 py-4 text-center text-gray-500">
                No trained messages found matching your criteria.
              </td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Pagination -->
  <% if @total_pages > 1 %>
    <div class="bg-white px-4 py-3 flex items-center justify-between border-t border-gray-200 sm:px-6 mt-4 rounded-lg shadow-sm">
      <div class="flex-1 flex justify-between sm:hidden">
        <% if @page > 1 %>
          <%= link_to "Previous", trained_messages_path(params.permit!.merge(page: @page - 1)), 
              class: "relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50" %>
        <% end %>
        <% if @page < @total_pages %>
          <%= link_to "Next", trained_messages_path(params.permit!.merge(page: @page + 1)), 
              class: "ml-3 relative inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50" %>
        <% end %>
      </div>
      <div class="hidden sm:flex-1 sm:flex sm:items-center sm:justify-between">
        <div>
          <p class="text-sm text-gray-700">
            Showing page <span class="font-medium"><%= @page %></span> of 
            <span class="font-medium"><%= @total_pages %></span>
            (<span class="font-medium"><%= @total_count %></span> total results)
          </p>
        </div>
        <div>
          <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
            <!-- Previous Button -->
            <% if @page > 1 %>
              <%= link_to trained_messages_path(params.permit!.merge(page: @page - 1)), 
                  class: "relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50" do %>
                <span class="sr-only">Previous</span>
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              <% end %>
            <% else %>
              <span class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-gray-50 text-sm font-medium text-gray-300 cursor-not-allowed">
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd" />
                </svg>
              </span>
            <% end %>

            <!-- Page Numbers -->
            <% start_page = [1, @page - 2].max %>
            <% end_page = [start_page + 4, @total_pages].min %>
            <% start_page = [end_page - 4, 1].max if end_page - start_page < 4 %>

            <% (start_page..end_page).each do |page_num| %>
              <% if page_num == @page %>
                <span class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-blue-50 text-sm font-medium text-blue-600">
                  <%= page_num %>
                </span>
              <% else %>
                <%= link_to page_num, trained_messages_path(params.permit!.merge(page: page_num)), 
                    class: "relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50" %>
              <% end %>
            <% end %>

            <!-- Next Button -->
            <% if @page < @total_pages %>
              <%= link_to trained_messages_path(params.permit!.merge(page: @page + 1)), 
                  class: "relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50" do %>
                <span class="sr-only">Next</span>
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
              <% end %>
            <% else %>
              <span class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-gray-50 text-sm font-medium text-gray-300 cursor-not-allowed">
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
                </svg>
              </span>
            <% end %>
          </nav>
        </div>
      </div>
    </div>
  <% end %>
</div>
